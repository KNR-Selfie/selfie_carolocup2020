<launch>
  <!-- PARAMS FROM YAML -->
  <arg name="file_name" default="$(find selfie_launch)/launch/parameters.yaml"/>
  <rosparam command="load" file="$(arg file_name)"/>

  <arg name="lookahead" default="0.55" />
  <arg name="min_speed" default="1.5" />
  <arg name="visualization_in_searching" default="false" />
  <arg name="parking_msgs_output" default="false" />
  <arg name="visualise" default="false" />
  <arg name="debug_mode" value="false"/>
  <arg name="real_window_size" value="0.1" />

  <arg name="homography_file" default="/home/$(env USER)/.ros/homography_export.yaml" />
  <arg name="hom_cut_file" default="/home/$(env USER)/.ros/hom_cut.yaml" />

  <!-- NODES -->
  <node pkg="urg_node" type="urg_node" name="lidar" respawn="true" output="screen">
  </node>

  <node name="stm32_bridge" type="selfie_stm32_bridge" pkg="selfie_stm32_bridge" respawn="true" output="screen">
    <remap from="/speed" to="/stm32/speed" />
  </node>

  <node name="detect_markings" type="detect_markings" pkg="selfie_perception" respawn="true" output="screen">
    <param name="config_file" value="$(arg homography_file)" />
    <param name="hom_cut_file" value="$(arg hom_cut_file)" />
    <param name="real_window_size" value="$(arg real_window_size)" />
    <param name="debug_mode" value="$(arg debug_mode)"/>
  </node>

  <node name="extract_road_features" type="extract_road_features" pkg="selfie_path_planner" respawn="true" output="screen">
    <param name="lookahead" value="$(arg lookahead)" />
    <param name="min_speed" value="$(arg min_speed)" />
  </node>

  <node pkg="selfie_perception" type="detect_obstacles" name="selfie_obstacle_detector" respawn="true" output="screen">
    <param name="visualize" value="$(arg visualise)" />
  </node>

  <node name="odometry" type="selfie_odometry" pkg="selfie_odometry" respawn="true" output="screen"/>

  <node name="scheduler" type="scheduler" pkg="selfie_scheduler" respawn="true" output="screen" >
  </node>

  <!--  INCLUDES -->
  <include file="$(find selfie_launch)/launch/subsystems/transforms.launch"/>

  <include file="$(find selfie_launch)/launch/subsystems/basler.launch"/>

  <include file="$(find selfie_launch)/launch/subsystems/control.launch">
  </include>

  <include file="$(find selfie_launch)/launch/subsystems/action_servers.launch">
    <arg name="i_visualization_in_searching" value="$(arg visualization_in_searching)" />
    <arg name="i_parking_msgs_output" value="$(arg parking_msgs_output)" />
  </include>


</launch>
